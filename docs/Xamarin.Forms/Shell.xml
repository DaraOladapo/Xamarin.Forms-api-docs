<Type Name="Shell" FullName="Xamarin.Forms.Shell">
  <TypeSignature Language="C#" Value="public class Shell : Xamarin.Forms.Page, Xamarin.Forms.IShellController" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Shell extends Xamarin.Forms.Page implements class Xamarin.Forms.IElementController, class Xamarin.Forms.IPageController, class Xamarin.Forms.IShellController, class Xamarin.Forms.IVisualElementController" />
  <TypeSignature Language="DocId" Value="T:Xamarin.Forms.Shell" />
  <TypeSignature Language="F#" Value="type Shell = class&#xA;    inherit Page&#xA;    interface IShellController&#xA;    interface IPageController&#xA;    interface IVisualElementController&#xA;    interface IElementController" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Forms.Core</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Xamarin.Forms.Page</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Xamarin.Forms.IElementController</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Xamarin.Forms.IPageController</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Xamarin.Forms.IShellController</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Xamarin.Forms.IVisualElementController</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Xamarin.Forms.ContentProperty("Items")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A <see cref="T:Xamarin.Forms.Page" /> that provides fundamental UI features that most applications require, leaving you to focus on the application's core workload.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Shell ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new <see cref="T:Xamarin.Forms.Shell" /> element with default values.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackButtonBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty BackButtonBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty BackButtonBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.BackButtonBehaviorProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable BackButtonBehaviorProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.BackButtonBehaviorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the <see cref="M:Xamarin.Forms.Shell.GetBackButtonBehavior(Xamarin.Forms.BindableObject)" /> and <see cref="M:Xamarin.Forms.Shell.SetBackButtonBehavior(Xamarin.Forms.BindableObject,Xamarin.Forms.BackButtonBehavior)" /> methods.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static Xamarin.Forms.Shell Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Xamarin.Forms.Shell Current" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Shell.Current" />
      <MemberSignature Language="F#" Value="member this.Current : Xamarin.Forms.Shell" Usage="Xamarin.Forms.Shell.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.Shell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Static property providing access to the current <see cref="T:Xamarin.Forms.Shell" />.</summary>
        <value>To be added.</value>
        <remarks>
          <para>This is a typecast alias for <c>Xamarin.Forms.Application.Current.MainPage</c>.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentItem">
      <MemberSignature Language="C#" Value="public Xamarin.Forms.ShellItem CurrentItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Xamarin.Forms.ShellItem CurrentItem" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Shell.CurrentItem" />
      <MemberSignature Language="F#" Value="member this.CurrentItem : Xamarin.Forms.ShellItem with get, set" Usage="Xamarin.Forms.Shell.CurrentItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.ShellItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The currently selected <see cref="T:Xamarin.Forms.ShellItem" /> or <see cref="T:Xamarin.Forms.FlyoutItem" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentItemProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty CurrentItemProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty CurrentItemProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.CurrentItemProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable CurrentItemProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.CurrentItemProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Xamarin.Forms.Shell.CurrentItem" /> field.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentState">
      <MemberSignature Language="C#" Value="public Xamarin.Forms.ShellNavigationState CurrentState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Xamarin.Forms.ShellNavigationState CurrentState" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Shell.CurrentState" />
      <MemberSignature Language="F#" Value="member this.CurrentState : Xamarin.Forms.ShellNavigationState" Usage="Xamarin.Forms.Shell.CurrentState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.ShellNavigationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The current navigation state of the <see cref="T:Xamarin.Forms.Shell" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStateProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty CurrentStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty CurrentStateProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.CurrentStateProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable CurrentStateProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.CurrentStateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Xamarin.Forms.Shell.CurrentState" /> field.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flyout">
      <MemberSignature Language="C#" Value="public Xamarin.Forms.ShellItemCollection Flyout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Xamarin.Forms.ShellItemCollection Flyout" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Shell.Flyout" />
      <MemberSignature Language="F#" Value="member this.Flyout : Xamarin.Forms.ShellItemCollection" Usage="Xamarin.Forms.Shell.Flyout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.ShellItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The root menu for a Shell application.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlyoutBackgroundColor">
      <MemberSignature Language="C#" Value="public Xamarin.Forms.Color FlyoutBackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Xamarin.Forms.Color FlyoutBackgroundColor" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Shell.FlyoutBackgroundColor" />
      <MemberSignature Language="F#" Value="member this.FlyoutBackgroundColor : Xamarin.Forms.Color with get, set" Usage="Xamarin.Forms.Shell.FlyoutBackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the background color of the <see cref="P:Xamarin.Forms.Shell.Flyout" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlyoutBackgroundColorProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty FlyoutBackgroundColorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty FlyoutBackgroundColorProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.FlyoutBackgroundColorProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable FlyoutBackgroundColorProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.FlyoutBackgroundColorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Xamarin.Forms.Shell.FlyoutBackgroundColor" /> field.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlyoutBehavior">
      <MemberSignature Language="C#" Value="public Xamarin.Forms.FlyoutBehavior FlyoutBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Xamarin.Forms.FlyoutBehavior FlyoutBehavior" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Shell.FlyoutBehavior" />
      <MemberSignature Language="F#" Value="member this.FlyoutBehavior : Xamarin.Forms.FlyoutBehavior with get, set" Usage="Xamarin.Forms.Shell.FlyoutBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.FlyoutBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Setting the <see cref="T:Xamarin.Forms.FlyoutBehavior" /> property to Disabled hides the flyout, which is useful when you only have one ShellItem. The other valid FlyoutBehavior values are Flyout (default), and Locked.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlyoutBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty FlyoutBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty FlyoutBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.FlyoutBehaviorProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable FlyoutBehaviorProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.FlyoutBehaviorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Xamarin.Forms.Shell.FlyoutBehavior" /> field.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlyoutHeader">
      <MemberSignature Language="C#" Value="public object FlyoutHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FlyoutHeader" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Shell.FlyoutHeader" />
      <MemberSignature Language="F#" Value="member this.FlyoutHeader : obj with get, set" Usage="Xamarin.Forms.Shell.FlyoutHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The flyout header is the content that optionally appears at the top of the flyout, with its appearance being defined by a <see cref="P:Xamarin.Forms.View" />  that can be set through the <see cref="P:Xamarin.Forms.Shell.FlyoutHeader" /> property value.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlyoutHeaderBehavior">
      <MemberSignature Language="C#" Value="public Xamarin.Forms.FlyoutHeaderBehavior FlyoutHeaderBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Xamarin.Forms.FlyoutHeaderBehavior FlyoutHeaderBehavior" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Shell.FlyoutHeaderBehavior" />
      <MemberSignature Language="F#" Value="member this.FlyoutHeaderBehavior : Xamarin.Forms.FlyoutHeaderBehavior with get, set" Usage="Xamarin.Forms.Shell.FlyoutHeaderBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.FlyoutHeaderBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Setting the FlyoutHeaderBehavior to CollapseOnScroll collapses the flyout as scrolling occurs. The other valid FlyoutHeaderBehavior values are Default, Fixed, and Scroll (scroll with the menu items).</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlyoutHeaderBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty FlyoutHeaderBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty FlyoutHeaderBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.FlyoutHeaderBehaviorProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable FlyoutHeaderBehaviorProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.FlyoutHeaderBehaviorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Xamarin.Forms.Shell.FlyoutHeaderBehavior" /> field.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlyoutHeaderProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty FlyoutHeaderProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty FlyoutHeaderProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.FlyoutHeaderProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable FlyoutHeaderProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.FlyoutHeaderProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Xamarin.Forms.Shell.FlyoutHeader" /> field.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlyoutHeaderTemplate">
      <MemberSignature Language="C#" Value="public Xamarin.Forms.DataTemplate FlyoutHeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Xamarin.Forms.DataTemplate FlyoutHeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Shell.FlyoutHeaderTemplate" />
      <MemberSignature Language="F#" Value="member this.FlyoutHeaderTemplate : Xamarin.Forms.DataTemplate with get, set" Usage="Xamarin.Forms.Shell.FlyoutHeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The flyout header appearance can be defined by setting the <see cref="P:Xamarin.Forms.Shell.FlyoutHeaderTemplate" /> property to a <see cref="P:Xamarin.Forms.DataTemplate" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlyoutHeaderTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty FlyoutHeaderTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty FlyoutHeaderTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.FlyoutHeaderTemplateProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable FlyoutHeaderTemplateProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.FlyoutHeaderTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Xamarin.Forms.Shell.FlyoutHeaderTemplate" /> field.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlyoutIcon">
      <MemberSignature Language="C#" Value="public Xamarin.Forms.ImageSource FlyoutIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Xamarin.Forms.ImageSource FlyoutIcon" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Shell.FlyoutIcon" />
      <MemberSignature Language="F#" Value="member this.FlyoutIcon : Xamarin.Forms.ImageSource with get, set" Usage="Xamarin.Forms.Shell.FlyoutIcon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.ImageSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the icon that, when pressed, opens the <see cref="P:Xamarin.Forms.Shell.Flyout" />.</summary>
        <value>The default icon is a "hamburger" icon.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlyoutIconProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty FlyoutIconProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty FlyoutIconProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.FlyoutIconProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable FlyoutIconProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.FlyoutIconProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Xamarin.Forms.Shell.FlyoutIcon" /> field.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlyoutIsPresented">
      <MemberSignature Language="C#" Value="public bool FlyoutIsPresented { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlyoutIsPresented" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Shell.FlyoutIsPresented" />
      <MemberSignature Language="F#" Value="member this.FlyoutIsPresented : bool with get, set" Usage="Xamarin.Forms.Shell.FlyoutIsPresented" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the visible status of the <see cref="P:Xamarin.Forms.Shell.Flyout" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlyoutIsPresentedProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty FlyoutIsPresentedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty FlyoutIsPresentedProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.FlyoutIsPresentedProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable FlyoutIsPresentedProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.FlyoutIsPresentedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Xamarin.Forms.Shell.FlyoutIsPresented" /> field.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBackButtonBehavior">
      <MemberSignature Language="C#" Value="public static Xamarin.Forms.BackButtonBehavior GetBackButtonBehavior (Xamarin.Forms.BindableObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Xamarin.Forms.BackButtonBehavior GetBackButtonBehavior(class Xamarin.Forms.BindableObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.GetBackButtonBehavior(Xamarin.Forms.BindableObject)" />
      <MemberSignature Language="F#" Value="static member GetBackButtonBehavior : Xamarin.Forms.BindableObject -&gt; Xamarin.Forms.BackButtonBehavior" Usage="Xamarin.Forms.Shell.GetBackButtonBehavior obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BackButtonBehavior</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>Gets the value of the <see cref="M:Xamarin.Forms.Shell.BackButtonBehaviorProperty" /> of the <paramref name="obj" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFlyoutBehavior">
      <MemberSignature Language="C#" Value="public static Xamarin.Forms.FlyoutBehavior GetFlyoutBehavior (Xamarin.Forms.BindableObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Xamarin.Forms.FlyoutBehavior GetFlyoutBehavior(class Xamarin.Forms.BindableObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.GetFlyoutBehavior(Xamarin.Forms.BindableObject)" />
      <MemberSignature Language="F#" Value="static member GetFlyoutBehavior : Xamarin.Forms.BindableObject -&gt; Xamarin.Forms.FlyoutBehavior" Usage="Xamarin.Forms.Shell.GetFlyoutBehavior obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.FlyoutBehavior</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>Gets the <see cref="P:Xamarin.Forms.Shell.FlyoutBehavior" /> of the <paramref name="obj" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNavBarIsVisible">
      <MemberSignature Language="C#" Value="public static bool GetNavBarIsVisible (Xamarin.Forms.BindableObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetNavBarIsVisible(class Xamarin.Forms.BindableObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.GetNavBarIsVisible(Xamarin.Forms.BindableObject)" />
      <MemberSignature Language="F#" Value="static member GetNavBarIsVisible : Xamarin.Forms.BindableObject -&gt; bool" Usage="Xamarin.Forms.Shell.GetNavBarIsVisible obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>Gets the visibility of the navigation bar of the <paramref name="obj" />  in a Shell application.</summary>
        <returns>
          <see langword="true" /> if the navigation bar is visible.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSearchHandler">
      <MemberSignature Language="C#" Value="public static Xamarin.Forms.SearchHandler GetSearchHandler (Xamarin.Forms.BindableObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Xamarin.Forms.SearchHandler GetSearchHandler(class Xamarin.Forms.BindableObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.GetSearchHandler(Xamarin.Forms.BindableObject)" />
      <MemberSignature Language="F#" Value="static member GetSearchHandler : Xamarin.Forms.BindableObject -&gt; Xamarin.Forms.SearchHandler" Usage="Xamarin.Forms.Shell.GetSearchHandler obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.SearchHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>Gets the <see cref="T:Xamarin.Forms.SearchHandler" /> for the specified <paramref name="obj" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShellBackgroundColor">
      <MemberSignature Language="C#" Value="public static Xamarin.Forms.Color GetShellBackgroundColor (Xamarin.Forms.BindableObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Xamarin.Forms.Color GetShellBackgroundColor(class Xamarin.Forms.BindableObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.GetShellBackgroundColor(Xamarin.Forms.BindableObject)" />
      <MemberSignature Language="F#" Value="static member GetShellBackgroundColor : Xamarin.Forms.BindableObject -&gt; Xamarin.Forms.Color" Usage="Xamarin.Forms.Shell.GetShellBackgroundColor obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>Gets the Shell background color for the <paramref name="obj" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShellDisabledColor">
      <MemberSignature Language="C#" Value="public static Xamarin.Forms.Color GetShellDisabledColor (Xamarin.Forms.BindableObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Xamarin.Forms.Color GetShellDisabledColor(class Xamarin.Forms.BindableObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.GetShellDisabledColor(Xamarin.Forms.BindableObject)" />
      <MemberSignature Language="F#" Value="static member GetShellDisabledColor : Xamarin.Forms.BindableObject -&gt; Xamarin.Forms.Color" Usage="Xamarin.Forms.Shell.GetShellDisabledColor obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>Gets the Shell disabled color for the <paramref name="obj" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShellForegroundColor">
      <MemberSignature Language="C#" Value="public static Xamarin.Forms.Color GetShellForegroundColor (Xamarin.Forms.BindableObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Xamarin.Forms.Color GetShellForegroundColor(class Xamarin.Forms.BindableObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.GetShellForegroundColor(Xamarin.Forms.BindableObject)" />
      <MemberSignature Language="F#" Value="static member GetShellForegroundColor : Xamarin.Forms.BindableObject -&gt; Xamarin.Forms.Color" Usage="Xamarin.Forms.Shell.GetShellForegroundColor obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>Gets the foreground color for the <paramref name="obj" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShellTabBarBackgroundColor">
      <MemberSignature Language="C#" Value="public static Xamarin.Forms.Color GetShellTabBarBackgroundColor (Xamarin.Forms.BindableObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Xamarin.Forms.Color GetShellTabBarBackgroundColor(class Xamarin.Forms.BindableObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.GetShellTabBarBackgroundColor(Xamarin.Forms.BindableObject)" />
      <MemberSignature Language="F#" Value="static member GetShellTabBarBackgroundColor : Xamarin.Forms.BindableObject -&gt; Xamarin.Forms.Color" Usage="Xamarin.Forms.Shell.GetShellTabBarBackgroundColor obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>Gets the background color for the tab bar for the <paramref name="obj" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShellTabBarDisabledColor">
      <MemberSignature Language="C#" Value="public static Xamarin.Forms.Color GetShellTabBarDisabledColor (Xamarin.Forms.BindableObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Xamarin.Forms.Color GetShellTabBarDisabledColor(class Xamarin.Forms.BindableObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.GetShellTabBarDisabledColor(Xamarin.Forms.BindableObject)" />
      <MemberSignature Language="F#" Value="static member GetShellTabBarDisabledColor : Xamarin.Forms.BindableObject -&gt; Xamarin.Forms.Color" Usage="Xamarin.Forms.Shell.GetShellTabBarDisabledColor obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>Gets the disabled color for the tab bar for the <paramref name="obj" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShellTabBarForegroundColor">
      <MemberSignature Language="C#" Value="public static Xamarin.Forms.Color GetShellTabBarForegroundColor (Xamarin.Forms.BindableObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Xamarin.Forms.Color GetShellTabBarForegroundColor(class Xamarin.Forms.BindableObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.GetShellTabBarForegroundColor(Xamarin.Forms.BindableObject)" />
      <MemberSignature Language="F#" Value="static member GetShellTabBarForegroundColor : Xamarin.Forms.BindableObject -&gt; Xamarin.Forms.Color" Usage="Xamarin.Forms.Shell.GetShellTabBarForegroundColor obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>Gets the foreground color for the tab bar for the <paramref name="obj" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShellTabBarTitleColor">
      <MemberSignature Language="C#" Value="public static Xamarin.Forms.Color GetShellTabBarTitleColor (Xamarin.Forms.BindableObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Xamarin.Forms.Color GetShellTabBarTitleColor(class Xamarin.Forms.BindableObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.GetShellTabBarTitleColor(Xamarin.Forms.BindableObject)" />
      <MemberSignature Language="F#" Value="static member GetShellTabBarTitleColor : Xamarin.Forms.BindableObject -&gt; Xamarin.Forms.Color" Usage="Xamarin.Forms.Shell.GetShellTabBarTitleColor obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>Gets the title color for tab bar for the <paramref name="obj" />..</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShellTabBarUnselectedColor">
      <MemberSignature Language="C#" Value="public static Xamarin.Forms.Color GetShellTabBarUnselectedColor (Xamarin.Forms.BindableObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Xamarin.Forms.Color GetShellTabBarUnselectedColor(class Xamarin.Forms.BindableObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.GetShellTabBarUnselectedColor(Xamarin.Forms.BindableObject)" />
      <MemberSignature Language="F#" Value="static member GetShellTabBarUnselectedColor : Xamarin.Forms.BindableObject -&gt; Xamarin.Forms.Color" Usage="Xamarin.Forms.Shell.GetShellTabBarUnselectedColor obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>Gets the color for unselected values in the tab bar for <paramref name="obj" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShellTitleColor">
      <MemberSignature Language="C#" Value="public static Xamarin.Forms.Color GetShellTitleColor (Xamarin.Forms.BindableObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Xamarin.Forms.Color GetShellTitleColor(class Xamarin.Forms.BindableObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.GetShellTitleColor(Xamarin.Forms.BindableObject)" />
      <MemberSignature Language="F#" Value="static member GetShellTitleColor : Xamarin.Forms.BindableObject -&gt; Xamarin.Forms.Color" Usage="Xamarin.Forms.Shell.GetShellTitleColor obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>Gets the color of the title for <paramref name="obj" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShellUnselectedColor">
      <MemberSignature Language="C#" Value="public static Xamarin.Forms.Color GetShellUnselectedColor (Xamarin.Forms.BindableObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Xamarin.Forms.Color GetShellUnselectedColor(class Xamarin.Forms.BindableObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.GetShellUnselectedColor(Xamarin.Forms.BindableObject)" />
      <MemberSignature Language="F#" Value="static member GetShellUnselectedColor : Xamarin.Forms.BindableObject -&gt; Xamarin.Forms.Color" Usage="Xamarin.Forms.Shell.GetShellUnselectedColor obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>Gets the color for unselected items in <paramref name="obj" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTabBarIsVisible">
      <MemberSignature Language="C#" Value="public static bool GetTabBarIsVisible (Xamarin.Forms.BindableObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetTabBarIsVisible(class Xamarin.Forms.BindableObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.GetTabBarIsVisible(Xamarin.Forms.BindableObject)" />
      <MemberSignature Language="F#" Value="static member GetTabBarIsVisible : Xamarin.Forms.BindableObject -&gt; bool" Usage="Xamarin.Forms.Shell.GetTabBarIsVisible obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>Gets whether the tab bar is visible in <paramref name="obj" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTitleView">
      <MemberSignature Language="C#" Value="public static Xamarin.Forms.View GetTitleView (Xamarin.Forms.BindableObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Xamarin.Forms.View GetTitleView(class Xamarin.Forms.BindableObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.GetTitleView(Xamarin.Forms.BindableObject)" />
      <MemberSignature Language="F#" Value="static member GetTitleView : Xamarin.Forms.BindableObject -&gt; Xamarin.Forms.View" Usage="Xamarin.Forms.Shell.GetTitleView obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>Gets the title <see cref="P:Xamarin.Forms.View" /> of <paramref name="obj" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task GoToAsync (Xamarin.Forms.ShellNavigationState state, bool animate = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task GoToAsync(class Xamarin.Forms.ShellNavigationState state, bool animate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.GoToAsync(Xamarin.Forms.ShellNavigationState,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.GoToAsync : Xamarin.Forms.ShellNavigationState * bool -&gt; System.Threading.Tasks.Task" Usage="shell.GoToAsync (state, animate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Xamarin.Forms.ShellNavigationState" />
        <Parameter Name="animate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <param name="animate">To be added.</param>
        <summary>Asynchronously navigates to <param name="state" />, optionally animating.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Note that <see cref="T:Xamarin.Forms.ShellNavigationState" /> has implicit conversions from <see langword="string" /> and <see cref="T:System.Uri" />, so developers may write code such as the following, with no explicit instantiation of the <see cref="T:Xamarin.Forms.ShellNavigationState" />:</para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
await Shell.Current.GoToAsync("app://xamarin.com/xaminals/animals/monkeys");
    ]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public Xamarin.Forms.ShellItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Xamarin.Forms.ShellItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Shell.Items" />
      <MemberSignature Language="F#" Value="member this.Items : Xamarin.Forms.ShellItemCollection" Usage="Xamarin.Forms.Shell.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.ShellItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The collection of <see cref="T:Xamarin.Forms.ShellItem" /> objects managed by <c>this</c><see cref="T:Xamarin.Forms.Shell" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty ItemsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty ItemsProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.ItemsProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemsProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.ItemsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Xamarin.Forms.Shell.Items" /> field.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public Xamarin.Forms.DataTemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Xamarin.Forms.DataTemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Shell.ItemTemplate" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : Xamarin.Forms.DataTemplate with get, set" Usage="Xamarin.Forms.Shell.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets <see cref="T:Xamarin.Forms.DataTemplate" /> applied to each of the <see cref="P:Xamarin.Forms.Shell.Items" />.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty ItemTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty ItemTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.ItemTemplateProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemTemplateProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.ItemTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Xamarin.Forms.Shell.ItemTemplate" /> field.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuItems">
      <MemberSignature Language="C#" Value="public Xamarin.Forms.MenuItemCollection MenuItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Xamarin.Forms.MenuItemCollection MenuItems" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Shell.MenuItems" />
      <MemberSignature Language="F#" Value="member this.MenuItems : Xamarin.Forms.MenuItemCollection" Usage="Xamarin.Forms.Shell.MenuItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.MenuItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the menu of the Shell application.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuItemsProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty MenuItemsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty MenuItemsProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.MenuItemsProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable MenuItemsProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.MenuItemsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Xamarin.Forms.Shell.MenuItems" /> field.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuItemTemplate">
      <MemberSignature Language="C#" Value="public Xamarin.Forms.DataTemplate MenuItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Xamarin.Forms.DataTemplate MenuItemTemplate" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Shell.MenuItemTemplate" />
      <MemberSignature Language="F#" Value="member this.MenuItemTemplate : Xamarin.Forms.DataTemplate with get, set" Usage="Xamarin.Forms.Shell.MenuItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:Xamarin.Forms.DataTemplate" /> applied to <see cref="T:Xamarin.Forms.MenuItem" /> objects in the <see cref="P:Xamarin.Forms.Shell.MenuItems" /> collection.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuItemTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty MenuItemTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty MenuItemTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.MenuItemTemplateProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable MenuItemTemplateProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.MenuItemTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Xamarin.Forms.Shell.MenuItemTemplate" /> field.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavBarIsVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty NavBarIsVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty NavBarIsVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.NavBarIsVisibleProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable NavBarIsVisibleProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.NavBarIsVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="M:Xamarin.Forms.Shell.GetNavBarIsVisible(Xamarin.Forms.BindableObject)" /> and <see cref="M:Xamarin.Forms.Shell.SetNavBarIsVisible(Xamarin.Forms.BindableObject,System.Boolean)" /> methods.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Xamarin.Forms.ShellNavigatedEventArgs&gt; Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Xamarin.Forms.ShellNavigatedEventArgs&gt; Navigated" />
      <MemberSignature Language="DocId" Value="E:Xamarin.Forms.Shell.Navigated" />
      <MemberSignature Language="F#" Value="member this.Navigated : EventHandler&lt;Xamarin.Forms.ShellNavigatedEventArgs&gt; " Usage="member this.Navigated : System.EventHandler&lt;Xamarin.Forms.ShellNavigatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Xamarin.Forms.ShellNavigatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The library raises this event after performing navigation.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Xamarin.Forms.ShellNavigatingEventArgs&gt; Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Xamarin.Forms.ShellNavigatingEventArgs&gt; Navigating" />
      <MemberSignature Language="DocId" Value="E:Xamarin.Forms.Shell.Navigating" />
      <MemberSignature Language="F#" Value="member this.Navigating : EventHandler&lt;Xamarin.Forms.ShellNavigatingEventArgs&gt; " Usage="member this.Navigating : System.EventHandler&lt;Xamarin.Forms.ShellNavigatingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Xamarin.Forms.ShellNavigatingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The library raises this event immediately prior to performing navigation.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBackButtonPressed">
      <MemberSignature Language="C#" Value="protected override bool OnBackButtonPressed ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBackButtonPressed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.OnBackButtonPressed" />
      <MemberSignature Language="F#" Value="override this.OnBackButtonPressed : unit -&gt; bool" Usage="shell.OnBackButtonPressed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns <see langword="true" /> if the <see cref="P:Xamarin.Forms.Shell.CurrentItem" /> was popped in response to a press of the back button.</summary>
        <returns>
          <see langword="true" /> if <see cref="P:Xamarin.Forms.Shell.CurrentItem" /> is not <see langword="null" /> and is not the only item in the navigation stack.</returns>
        <remarks>
          <para>This method may return prior to the navigation having completed. (See <see cref="M:Xamarin.Forms.INavigation.PopAsync" />.)</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBindingContextChanged">
      <MemberSignature Language="C#" Value="protected override void OnBindingContextChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBindingContextChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.OnBindingContextChanged" />
      <MemberSignature Language="F#" Value="override this.OnBindingContextChanged : unit -&gt; unit" Usage="shell.OnBindingContextChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Developers may override this method to customize behavior in response to the binding context changing.</summary>
        <remarks>
          <para>Developers should call <c>base.OnBindingContextChanged()</c> at the beginning of their overriding method.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChildAdded">
      <MemberSignature Language="C#" Value="protected override void OnChildAdded (Xamarin.Forms.Element child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnChildAdded(class Xamarin.Forms.Element child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.OnChildAdded(Xamarin.Forms.Element)" />
      <MemberSignature Language="F#" Value="override this.OnChildAdded : Xamarin.Forms.Element -&gt; unit" Usage="shell.OnChildAdded child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Xamarin.Forms.Element" />
      </Parameters>
      <Docs>
        <param name="child">To be added.</param>
        <summary>Developers may override this method to customize behavior when a new <see cref="T:Xamarin.Forms.Element" /> is added.</summary>
        <remarks>
          <para>Developers should call <c>base.OnChildAdded()</c> at the beginning of their overriding method.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChildRemoved">
      <MemberSignature Language="C#" Value="protected override void OnChildRemoved (Xamarin.Forms.Element child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnChildRemoved(class Xamarin.Forms.Element child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.OnChildRemoved(Xamarin.Forms.Element)" />
      <MemberSignature Language="F#" Value="override this.OnChildRemoved : Xamarin.Forms.Element -&gt; unit" Usage="shell.OnChildRemoved child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Xamarin.Forms.Element" />
      </Parameters>
      <Docs>
        <param name="child">To be added.</param>
        <summary>Developers may override this method to customize behavior when a child <see cref="T:Xamarin.Forms.Element" /> is removed.</summary>
        <remarks>
          <para>Developers should call <c>base.OnChildRemoved()</c> at the beginning of their overriding method.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNavigated">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigated (Xamarin.Forms.ShellNavigatedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigated(class Xamarin.Forms.ShellNavigatedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.OnNavigated(Xamarin.Forms.ShellNavigatedEventArgs)" />
      <MemberSignature Language="F#" Value="abstract member OnNavigated : Xamarin.Forms.ShellNavigatedEventArgs -&gt; unit&#xA;override this.OnNavigated : Xamarin.Forms.ShellNavigatedEventArgs -&gt; unit" Usage="shell.OnNavigated args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="Xamarin.Forms.ShellNavigatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <summary>Developers may override this method to customize behavior on navigation.</summary>
        <remarks>
          <para>Developers should call <c>base.OnNavigated()</c> at the end of their overriding method or must raise the <see cref="E:Xamarin.Forms.Shell.Navigated" /> event themselves.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNavigating">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigating (Xamarin.Forms.ShellNavigatingEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigating(class Xamarin.Forms.ShellNavigatingEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.OnNavigating(Xamarin.Forms.ShellNavigatingEventArgs)" />
      <MemberSignature Language="F#" Value="abstract member OnNavigating : Xamarin.Forms.ShellNavigatingEventArgs -&gt; unit&#xA;override this.OnNavigating : Xamarin.Forms.ShellNavigatingEventArgs -&gt; unit" Usage="shell.OnNavigating args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="Xamarin.Forms.ShellNavigatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <summary>Developers may override this method to customize behavior prior to navigation.</summary>
        <remarks>
          <para>Developers should call <c>base.OnNavigating()</c> at the end of their overriding method or must raise the <see cref="E:Xamarin.Forms.Shell.Navigating" /> event themselves.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Route">
      <MemberSignature Language="C#" Value="public string Route { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Route" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Shell.Route" />
      <MemberSignature Language="F#" Value="member this.Route : string with get, set" Usage="Xamarin.Forms.Shell.Route" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the string used to address the <see cref="T:Xamarin.Forms.Shell" />.</summary>
        <value>To be added.</value>
        <remarks>
          <para><![CDATA[URI-based navigation is accomplished with routes, which are the URI segments that are used to navigate within a Shell application. Navigation URI’s are formatted as follows (items in bold are required, items in italics are optional):

**RouteScheme**://**RouteHost**/**Route**/*page*?*QueryParameters*

Query parameters are parameters that can be passed to the destination page while navigating.
The RouteScheme, RouteHost, and primary route must be defined in your Shell subclass with the RouteScheme, RouteHost, and Route properties:
]]></para>
          <example>
            <code lang="XAML"><![CDATA[
<Shell ...
       RouteScheme="app"
       RouteHost="xamarin.com"
       Route="xaminals">
    ...
</Shell>

    ]]></code>
          </example>
          <para>
Combined, the RouteScheme, RouteHost, and Route property values form the app://xamarin.com/xaminals root URI.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteHost">
      <MemberSignature Language="C#" Value="public string RouteHost { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RouteHost" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Shell.RouteHost" />
      <MemberSignature Language="F#" Value="member this.RouteHost : string with get, set" Usage="Xamarin.Forms.Shell.RouteHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteScheme">
      <MemberSignature Language="C#" Value="public string RouteScheme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RouteScheme" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Shell.RouteScheme" />
      <MemberSignature Language="F#" Value="member this.RouteScheme : string with get, set" Usage="Xamarin.Forms.Shell.RouteScheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchHandlerProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty SearchHandlerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty SearchHandlerProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.SearchHandlerProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable SearchHandlerProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.SearchHandlerProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="M:Xamarin.Forms.Shell.GetSearchHandler(Xamarin.Forms.BindableObject)" /> and <see cref="M:Xamarin.Forms.Shell.SetSearchHandler(Xamarin.Forms.BindableObject,Xamarin.Forms.SearchHandler)" /> methods.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackButtonBehavior">
      <MemberSignature Language="C#" Value="public static void SetBackButtonBehavior (Xamarin.Forms.BindableObject obj, Xamarin.Forms.BackButtonBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetBackButtonBehavior(class Xamarin.Forms.BindableObject obj, class Xamarin.Forms.BackButtonBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.SetBackButtonBehavior(Xamarin.Forms.BindableObject,Xamarin.Forms.BackButtonBehavior)" />
      <MemberSignature Language="F#" Value="static member SetBackButtonBehavior : Xamarin.Forms.BindableObject * Xamarin.Forms.BackButtonBehavior -&gt; unit" Usage="Xamarin.Forms.Shell.SetBackButtonBehavior (obj, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
        <Parameter Name="behavior" Type="Xamarin.Forms.BackButtonBehavior" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <param name="behavior">To be added.</param>
        <summary>Sets the back button behavior of <param name="obj" /> to <param name="behavior" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFlyoutBehavior">
      <MemberSignature Language="C#" Value="public static void SetFlyoutBehavior (Xamarin.Forms.BindableObject obj, Xamarin.Forms.FlyoutBehavior value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFlyoutBehavior(class Xamarin.Forms.BindableObject obj, valuetype Xamarin.Forms.FlyoutBehavior value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.SetFlyoutBehavior(Xamarin.Forms.BindableObject,Xamarin.Forms.FlyoutBehavior)" />
      <MemberSignature Language="F#" Value="static member SetFlyoutBehavior : Xamarin.Forms.BindableObject * Xamarin.Forms.FlyoutBehavior -&gt; unit" Usage="Xamarin.Forms.Shell.SetFlyoutBehavior (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
        <Parameter Name="value" Type="Xamarin.Forms.FlyoutBehavior" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <param name="value">To be added.</param>
        <summary>Sets the flyout behavior of <param name="obj" /> to <param name="value" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNavBarIsVisible">
      <MemberSignature Language="C#" Value="public static void SetNavBarIsVisible (Xamarin.Forms.BindableObject obj, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetNavBarIsVisible(class Xamarin.Forms.BindableObject obj, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.SetNavBarIsVisible(Xamarin.Forms.BindableObject,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member SetNavBarIsVisible : Xamarin.Forms.BindableObject * bool -&gt; unit" Usage="Xamarin.Forms.Shell.SetNavBarIsVisible (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <param name="value">To be added.</param>
        <summary>Sets the navigation bar visibility of <param name="obj" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSearchHandler">
      <MemberSignature Language="C#" Value="public static void SetSearchHandler (Xamarin.Forms.BindableObject obj, Xamarin.Forms.SearchHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSearchHandler(class Xamarin.Forms.BindableObject obj, class Xamarin.Forms.SearchHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.SetSearchHandler(Xamarin.Forms.BindableObject,Xamarin.Forms.SearchHandler)" />
      <MemberSignature Language="F#" Value="static member SetSearchHandler : Xamarin.Forms.BindableObject * Xamarin.Forms.SearchHandler -&gt; unit" Usage="Xamarin.Forms.Shell.SetSearchHandler (obj, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
        <Parameter Name="handler" Type="Xamarin.Forms.SearchHandler" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>Sets the <see cref="T:Xamarin.Forms.SearchHandler" /> for <param name="obj" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShellBackgroundColor">
      <MemberSignature Language="C#" Value="public static void SetShellBackgroundColor (Xamarin.Forms.BindableObject obj, Xamarin.Forms.Color value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetShellBackgroundColor(class Xamarin.Forms.BindableObject obj, valuetype Xamarin.Forms.Color value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.SetShellBackgroundColor(Xamarin.Forms.BindableObject,Xamarin.Forms.Color)" />
      <MemberSignature Language="F#" Value="static member SetShellBackgroundColor : Xamarin.Forms.BindableObject * Xamarin.Forms.Color -&gt; unit" Usage="Xamarin.Forms.Shell.SetShellBackgroundColor (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
        <Parameter Name="value" Type="Xamarin.Forms.Color" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <param name="value">To be added.</param>
        <summary>Sets the background color of <param name="obj" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShellDisabledColor">
      <MemberSignature Language="C#" Value="public static void SetShellDisabledColor (Xamarin.Forms.BindableObject obj, Xamarin.Forms.Color value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetShellDisabledColor(class Xamarin.Forms.BindableObject obj, valuetype Xamarin.Forms.Color value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.SetShellDisabledColor(Xamarin.Forms.BindableObject,Xamarin.Forms.Color)" />
      <MemberSignature Language="F#" Value="static member SetShellDisabledColor : Xamarin.Forms.BindableObject * Xamarin.Forms.Color -&gt; unit" Usage="Xamarin.Forms.Shell.SetShellDisabledColor (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
        <Parameter Name="value" Type="Xamarin.Forms.Color" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <param name="value">To be added.</param>
        <summary>Sets the disabled color of <param name="obj" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShellForegroundColor">
      <MemberSignature Language="C#" Value="public static void SetShellForegroundColor (Xamarin.Forms.BindableObject obj, Xamarin.Forms.Color value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetShellForegroundColor(class Xamarin.Forms.BindableObject obj, valuetype Xamarin.Forms.Color value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.SetShellForegroundColor(Xamarin.Forms.BindableObject,Xamarin.Forms.Color)" />
      <MemberSignature Language="F#" Value="static member SetShellForegroundColor : Xamarin.Forms.BindableObject * Xamarin.Forms.Color -&gt; unit" Usage="Xamarin.Forms.Shell.SetShellForegroundColor (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
        <Parameter Name="value" Type="Xamarin.Forms.Color" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <param name="value">To be added.</param>
        <summary>Sets the foreground color of <paramref name="obj"/>.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShellTabBarBackgroundColor">
      <MemberSignature Language="C#" Value="public static void SetShellTabBarBackgroundColor (Xamarin.Forms.BindableObject obj, Xamarin.Forms.Color value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetShellTabBarBackgroundColor(class Xamarin.Forms.BindableObject obj, valuetype Xamarin.Forms.Color value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.SetShellTabBarBackgroundColor(Xamarin.Forms.BindableObject,Xamarin.Forms.Color)" />
      <MemberSignature Language="F#" Value="static member SetShellTabBarBackgroundColor : Xamarin.Forms.BindableObject * Xamarin.Forms.Color -&gt; unit" Usage="Xamarin.Forms.Shell.SetShellTabBarBackgroundColor (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
        <Parameter Name="value" Type="Xamarin.Forms.Color" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <param name="value">To be added.</param>
        <summary>Sets the background color of the tab bar of <param name="obj" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShellTabBarDisabledColor">
      <MemberSignature Language="C#" Value="public static void SetShellTabBarDisabledColor (Xamarin.Forms.BindableObject obj, Xamarin.Forms.Color value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetShellTabBarDisabledColor(class Xamarin.Forms.BindableObject obj, valuetype Xamarin.Forms.Color value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.SetShellTabBarDisabledColor(Xamarin.Forms.BindableObject,Xamarin.Forms.Color)" />
      <MemberSignature Language="F#" Value="static member SetShellTabBarDisabledColor : Xamarin.Forms.BindableObject * Xamarin.Forms.Color -&gt; unit" Usage="Xamarin.Forms.Shell.SetShellTabBarDisabledColor (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
        <Parameter Name="value" Type="Xamarin.Forms.Color" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <param name="value">To be added.</param>
        <summary>Sets the disabled color of the tab bar of <param name="obj" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShellTabBarForegroundColor">
      <MemberSignature Language="C#" Value="public static void SetShellTabBarForegroundColor (Xamarin.Forms.BindableObject obj, Xamarin.Forms.Color value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetShellTabBarForegroundColor(class Xamarin.Forms.BindableObject obj, valuetype Xamarin.Forms.Color value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.SetShellTabBarForegroundColor(Xamarin.Forms.BindableObject,Xamarin.Forms.Color)" />
      <MemberSignature Language="F#" Value="static member SetShellTabBarForegroundColor : Xamarin.Forms.BindableObject * Xamarin.Forms.Color -&gt; unit" Usage="Xamarin.Forms.Shell.SetShellTabBarForegroundColor (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
        <Parameter Name="value" Type="Xamarin.Forms.Color" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <param name="value">To be added.</param>
        <summary>Sets the foreground color of the tab bar of <param name="obj" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShellTabBarTitleColor">
      <MemberSignature Language="C#" Value="public static void SetShellTabBarTitleColor (Xamarin.Forms.BindableObject obj, Xamarin.Forms.Color value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetShellTabBarTitleColor(class Xamarin.Forms.BindableObject obj, valuetype Xamarin.Forms.Color value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.SetShellTabBarTitleColor(Xamarin.Forms.BindableObject,Xamarin.Forms.Color)" />
      <MemberSignature Language="F#" Value="static member SetShellTabBarTitleColor : Xamarin.Forms.BindableObject * Xamarin.Forms.Color -&gt; unit" Usage="Xamarin.Forms.Shell.SetShellTabBarTitleColor (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
        <Parameter Name="value" Type="Xamarin.Forms.Color" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <param name="value">To be added.</param>
        <summary>Sets the color of the title of the tab bar of <param name="obj" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShellTabBarUnselectedColor">
      <MemberSignature Language="C#" Value="public static void SetShellTabBarUnselectedColor (Xamarin.Forms.BindableObject obj, Xamarin.Forms.Color value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetShellTabBarUnselectedColor(class Xamarin.Forms.BindableObject obj, valuetype Xamarin.Forms.Color value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.SetShellTabBarUnselectedColor(Xamarin.Forms.BindableObject,Xamarin.Forms.Color)" />
      <MemberSignature Language="F#" Value="static member SetShellTabBarUnselectedColor : Xamarin.Forms.BindableObject * Xamarin.Forms.Color -&gt; unit" Usage="Xamarin.Forms.Shell.SetShellTabBarUnselectedColor (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
        <Parameter Name="value" Type="Xamarin.Forms.Color" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <param name="value">To be added.</param>
        <summary>Sets the color of unselected items in the tab bar of <param name="obj" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShellTitleColor">
      <MemberSignature Language="C#" Value="public static void SetShellTitleColor (Xamarin.Forms.BindableObject obj, Xamarin.Forms.Color value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetShellTitleColor(class Xamarin.Forms.BindableObject obj, valuetype Xamarin.Forms.Color value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.SetShellTitleColor(Xamarin.Forms.BindableObject,Xamarin.Forms.Color)" />
      <MemberSignature Language="F#" Value="static member SetShellTitleColor : Xamarin.Forms.BindableObject * Xamarin.Forms.Color -&gt; unit" Usage="Xamarin.Forms.Shell.SetShellTitleColor (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
        <Parameter Name="value" Type="Xamarin.Forms.Color" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <param name="value">To be added.</param>
        <summary>Sets the title color of <param name="obj" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShellUnselectedColor">
      <MemberSignature Language="C#" Value="public static void SetShellUnselectedColor (Xamarin.Forms.BindableObject obj, Xamarin.Forms.Color value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetShellUnselectedColor(class Xamarin.Forms.BindableObject obj, valuetype Xamarin.Forms.Color value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.SetShellUnselectedColor(Xamarin.Forms.BindableObject,Xamarin.Forms.Color)" />
      <MemberSignature Language="F#" Value="static member SetShellUnselectedColor : Xamarin.Forms.BindableObject * Xamarin.Forms.Color -&gt; unit" Usage="Xamarin.Forms.Shell.SetShellUnselectedColor (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
        <Parameter Name="value" Type="Xamarin.Forms.Color" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <param name="value">To be added.</param>
        <summary>Sets the color of unselected items in <param name="obj" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTabBarIsVisible">
      <MemberSignature Language="C#" Value="public static void SetTabBarIsVisible (Xamarin.Forms.BindableObject obj, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTabBarIsVisible(class Xamarin.Forms.BindableObject obj, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.SetTabBarIsVisible(Xamarin.Forms.BindableObject,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member SetTabBarIsVisible : Xamarin.Forms.BindableObject * bool -&gt; unit" Usage="Xamarin.Forms.Shell.SetTabBarIsVisible (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <param name="value">To be added.</param>
        <summary>Sets the tab bar visibility of <param name="obj" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTitleView">
      <MemberSignature Language="C#" Value="public static void SetTitleView (Xamarin.Forms.BindableObject obj, Xamarin.Forms.View value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTitleView(class Xamarin.Forms.BindableObject obj, class Xamarin.Forms.View value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.SetTitleView(Xamarin.Forms.BindableObject,Xamarin.Forms.View)" />
      <MemberSignature Language="F#" Value="static member SetTitleView : Xamarin.Forms.BindableObject * Xamarin.Forms.View -&gt; unit" Usage="Xamarin.Forms.Shell.SetTitleView (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Xamarin.Forms.BindableObject" />
        <Parameter Name="value" Type="Xamarin.Forms.View" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <param name="value">To be added.</param>
        <summary>Sets the title <see cref="T:Xamarin.Forms.View" /> of <param name="obj" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShellBackgroundColorProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty ShellBackgroundColorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty ShellBackgroundColorProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.ShellBackgroundColorProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable ShellBackgroundColorProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.ShellBackgroundColorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="M:Xamarin.Forms.Shell.GetShellBackgroundColor(Xamarin.Forms.BindableObject)" /> and <see cref="M:Xamarin.Forms.Shell.SetShellBackgroundColor(Xamarin.Forms.BindableObject,Xamarin.Forms.Color)" /> methods.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShellDisabledColorProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty ShellDisabledColorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty ShellDisabledColorProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.ShellDisabledColorProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable ShellDisabledColorProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.ShellDisabledColorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="M:Xamarin.Forms.Shell.GetNavBarIsVisible(Xamarin.Forms.BindableObject)" /> and <see cref="M:Xamarin.Forms.Shell.SetNavBarIsVisible(Xamarin.Forms.BindableObject,System.Boolean)" /> methods.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShellForegroundColorProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty ShellForegroundColorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty ShellForegroundColorProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.ShellForegroundColorProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable ShellForegroundColorProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.ShellForegroundColorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="M:Xamarin.Forms.Shell.GetShellForegroundColor(Xamarin.Forms.BindableObject)" /> and <see cref="M:Xamarin.Forms.Shell.SetShellForegroundColor(Xamarin.Forms.BindableObject,Xamarin.Forms.Color)" /> methods.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShellTabBarBackgroundColorProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty ShellTabBarBackgroundColorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty ShellTabBarBackgroundColorProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.ShellTabBarBackgroundColorProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable ShellTabBarBackgroundColorProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.ShellTabBarBackgroundColorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="M:Xamarin.Forms.Shell.GetShellTabBarBackgroundColor(Xamarin.Forms.BindableObject)" /> and <see cref="M:Xamarin.Forms.Shell.SetShellTabBarBackgroundColor(Xamarin.Forms.BindableObject,Xamarin.Forms.Color)" /> methods.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShellTabBarDisabledColorProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty ShellTabBarDisabledColorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty ShellTabBarDisabledColorProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.ShellTabBarDisabledColorProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable ShellTabBarDisabledColorProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.ShellTabBarDisabledColorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="M:Xamarin.Forms.Shell.GetShellTabBarDisabledColor(Xamarin.Forms.BindableObject)" /> and <see cref="M:Xamarin.Forms.Shell.SetShellTabBarDisabledColor(Xamarin.Forms.BindableObject,Xamarin.Forms.Color)" /> methods.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShellTabBarForegroundColorProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty ShellTabBarForegroundColorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty ShellTabBarForegroundColorProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.ShellTabBarForegroundColorProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable ShellTabBarForegroundColorProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.ShellTabBarForegroundColorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="M:Xamarin.Forms.Shell.GetShellTabBarForegroundColor(Xamarin.Forms.BindableObject)" /> and <see cref="M:Xamarin.Forms.Shell.SetShellTabBarForegroundColor(Xamarin.Forms.BindableObject,Xamarin.Forms.Color)" /> methods.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShellTabBarTitleColorProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty ShellTabBarTitleColorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty ShellTabBarTitleColorProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.ShellTabBarTitleColorProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable ShellTabBarTitleColorProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.ShellTabBarTitleColorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>xThe backing store for the <see cref="M:Xamarin.Forms.Shell.GetShellTabBarTitleColor(Xamarin.Forms.BindableObject)" /> and <see cref="M:Xamarin.Forms.Shell.SetShellTabBarTitleColor(Xamarin.Forms.BindableObject,Xamarin.Forms.Color)" /> methods.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShellTabBarUnselectedColorProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty ShellTabBarUnselectedColorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty ShellTabBarUnselectedColorProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.ShellTabBarUnselectedColorProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable ShellTabBarUnselectedColorProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.ShellTabBarUnselectedColorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>xThe backing store for the <see cref="M:Xamarin.Forms.Shell.GetShellTabBarUnselectedColor(Xamarin.Forms.BindableObject)" /> and <see cref="M:Xamarin.Forms.Shell.SetShellTabBarUnselectedColor(Xamarin.Forms.BindableObject,Xamarin.Forms.Color)" /> methods.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShellTitleColorProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty ShellTitleColorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty ShellTitleColorProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.ShellTitleColorProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable ShellTitleColorProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.ShellTitleColorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="M:Xamarin.Forms.Shell.GetShellTitleColor(Xamarin.Forms.BindableObject)" /> and <see cref="M:Xamarin.Forms.Shell.SetShellTitleColor(Xamarin.Forms.BindableObject,Xamarin.Forms.Color)" /> methods.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShellUnselectedColorProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty ShellUnselectedColorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty ShellUnselectedColorProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.ShellUnselectedColorProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable ShellUnselectedColorProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.ShellUnselectedColorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>xThe backing store for the <see cref="M:Xamarin.Forms.Shell.GetShellUnselectedColor(Xamarin.Forms.BindableObject)" /> and <see cref="M:Xamarin.Forms.Shell.SetShellUnselectedColor(Xamarin.Forms.BindableObject,Xamarin.Forms.Color)" /> methods.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabBarIsVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty TabBarIsVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty TabBarIsVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.TabBarIsVisibleProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable TabBarIsVisibleProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.TabBarIsVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="M:Xamarin.Forms.Shell.GetTabBarIsVisible(Xamarin.Forms.BindableObject)" /> and <see cref="M:Xamarin.Forms.Shell.SetTabBarIsVisible(Xamarin.Forms.BindableObject,System.Boolean)" /> methods.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleViewProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty TitleViewProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty TitleViewProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Shell.TitleViewProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable TitleViewProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Shell.TitleViewProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>xThe backing store for the <see cref="M:Xamarin.Forms.Shell.GetTitleView(Xamarin.Forms.BindableObject)" /> and <see cref="M:Xamarin.Forms.Shell.SetTitleView(Xamarin.Forms.BindableObject,Xamarin.Forms.View)" /> methods.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xamarin.Forms.IShellController.AddAppearanceObserver">
      <MemberSignature Language="C#" Value="void IShellController.AddAppearanceObserver (Xamarin.Forms.IAppearanceObserver observer, Xamarin.Forms.Element pivot);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Xamarin.Forms.IShellController.AddAppearanceObserver(class Xamarin.Forms.IAppearanceObserver observer, class Xamarin.Forms.Element pivot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.Xamarin#Forms#IShellController#AddAppearanceObserver(Xamarin.Forms.IAppearanceObserver,Xamarin.Forms.Element)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Xamarin.Forms.IShellController.AddAppearanceObserver(Xamarin.Forms.IAppearanceObserver,Xamarin.Forms.Element)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="Xamarin.Forms.IAppearanceObserver" />
        <Parameter Name="pivot" Type="Xamarin.Forms.Element" />
      </Parameters>
      <Docs>
        <param name="observer">To be added.</param>
        <param name="pivot">To be added.</param>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xamarin.Forms.IShellController.AddFlyoutBehaviorObserver">
      <MemberSignature Language="C#" Value="void IShellController.AddFlyoutBehaviorObserver (Xamarin.Forms.IFlyoutBehaviorObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Xamarin.Forms.IShellController.AddFlyoutBehaviorObserver(class Xamarin.Forms.IFlyoutBehaviorObserver observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.Xamarin#Forms#IShellController#AddFlyoutBehaviorObserver(Xamarin.Forms.IFlyoutBehaviorObserver)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Xamarin.Forms.IShellController.AddFlyoutBehaviorObserver(Xamarin.Forms.IFlyoutBehaviorObserver)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="Xamarin.Forms.IFlyoutBehaviorObserver" />
      </Parameters>
      <Docs>
        <param name="observer">To be added.</param>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xamarin.Forms.IShellController.AppearanceChanged">
      <MemberSignature Language="C#" Value="void IShellController.AppearanceChanged (Xamarin.Forms.Element source, bool appearanceSet);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Xamarin.Forms.IShellController.AppearanceChanged(class Xamarin.Forms.Element source, bool appearanceSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.Xamarin#Forms#IShellController#AppearanceChanged(Xamarin.Forms.Element,System.Boolean)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Xamarin.Forms.IShellController.AppearanceChanged(Xamarin.Forms.Element,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Xamarin.Forms.Element" />
        <Parameter Name="appearanceSet" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="appearanceSet">To be added.</param>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xamarin.Forms.IShellController.FlyoutHeader">
      <MemberSignature Language="C#" Value="Xamarin.Forms.View Xamarin.Forms.IShellController.FlyoutHeader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Xamarin.Forms.View Xamarin.Forms.IShellController.FlyoutHeader" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Shell.Xamarin#Forms#IShellController#FlyoutHeader" />
      <MemberSignature Language="F#" Usage="Xamarin.Forms.IShellController.FlyoutHeader" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Xamarin.Forms.IShellController.FlyoutHeader</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xamarin.Forms.IShellController.GenerateFlyoutGrouping">
      <MemberSignature Language="C#" Value="System.Collections.Generic.List&lt;System.Collections.Generic.List&lt;Xamarin.Forms.Element&gt;&gt; IShellController.GenerateFlyoutGrouping ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.List`1&lt;class System.Collections.Generic.List`1&lt;class Xamarin.Forms.Element&gt;&gt; Xamarin.Forms.IShellController.GenerateFlyoutGrouping() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.Xamarin#Forms#IShellController#GenerateFlyoutGrouping" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Xamarin.Forms.IShellController.GenerateFlyoutGrouping</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Collections.Generic.List&lt;Xamarin.Forms.Element&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xamarin.Forms.IShellController.GetNavigationState">
      <MemberSignature Language="C#" Value="Xamarin.Forms.ShellNavigationState IShellController.GetNavigationState (Xamarin.Forms.ShellItem shellItem, Xamarin.Forms.ShellSection shellSection, Xamarin.Forms.ShellContent shellContent, bool includeStack);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Xamarin.Forms.ShellNavigationState Xamarin.Forms.IShellController.GetNavigationState(class Xamarin.Forms.ShellItem shellItem, class Xamarin.Forms.ShellSection shellSection, class Xamarin.Forms.ShellContent shellContent, bool includeStack) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.Xamarin#Forms#IShellController#GetNavigationState(Xamarin.Forms.ShellItem,Xamarin.Forms.ShellSection,Xamarin.Forms.ShellContent,System.Boolean)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Xamarin.Forms.IShellController.GetNavigationState(Xamarin.Forms.ShellItem,Xamarin.Forms.ShellSection,Xamarin.Forms.ShellContent,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.ShellNavigationState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shellItem" Type="Xamarin.Forms.ShellItem" />
        <Parameter Name="shellSection" Type="Xamarin.Forms.ShellSection" />
        <Parameter Name="shellContent" Type="Xamarin.Forms.ShellContent" />
        <Parameter Name="includeStack" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="shellItem">To be added.</param>
        <param name="shellSection">To be added.</param>
        <param name="shellContent">To be added.</param>
        <param name="includeStack">To be added.</param>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xamarin.Forms.IShellController.OnFlyoutItemSelected">
      <MemberSignature Language="C#" Value="void IShellController.OnFlyoutItemSelected (Xamarin.Forms.Element element);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Xamarin.Forms.IShellController.OnFlyoutItemSelected(class Xamarin.Forms.Element element) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.Xamarin#Forms#IShellController#OnFlyoutItemSelected(Xamarin.Forms.Element)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Xamarin.Forms.IShellController.OnFlyoutItemSelected(Xamarin.Forms.Element)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Xamarin.Forms.Element" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xamarin.Forms.IShellController.OnFlyoutItemSelectedAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task IShellController.OnFlyoutItemSelectedAsync (Xamarin.Forms.Element element);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task Xamarin.Forms.IShellController.OnFlyoutItemSelectedAsync(class Xamarin.Forms.Element element) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.Xamarin#Forms#IShellController#OnFlyoutItemSelectedAsync(Xamarin.Forms.Element)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Xamarin.Forms.IShellController.OnFlyoutItemSelectedAsync(Xamarin.Forms.Element)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Xamarin.Forms.Element" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xamarin.Forms.IShellController.ProposeNavigation">
      <MemberSignature Language="C#" Value="bool IShellController.ProposeNavigation (Xamarin.Forms.ShellNavigationSource source, Xamarin.Forms.ShellItem shellItem, Xamarin.Forms.ShellSection shellSection, Xamarin.Forms.ShellContent shellContent, System.Collections.Generic.IReadOnlyList&lt;Xamarin.Forms.Page&gt; stack, bool canCancel);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Xamarin.Forms.IShellController.ProposeNavigation(valuetype Xamarin.Forms.ShellNavigationSource source, class Xamarin.Forms.ShellItem shellItem, class Xamarin.Forms.ShellSection shellSection, class Xamarin.Forms.ShellContent shellContent, class System.Collections.Generic.IReadOnlyList`1&lt;class Xamarin.Forms.Page&gt; stack, bool canCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.Xamarin#Forms#IShellController#ProposeNavigation(Xamarin.Forms.ShellNavigationSource,Xamarin.Forms.ShellItem,Xamarin.Forms.ShellSection,Xamarin.Forms.ShellContent,System.Collections.Generic.IReadOnlyList{Xamarin.Forms.Page},System.Boolean)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Xamarin.Forms.IShellController.ProposeNavigation(Xamarin.Forms.ShellNavigationSource,Xamarin.Forms.ShellItem,Xamarin.Forms.ShellSection,Xamarin.Forms.ShellContent,System.Collections.Generic.IReadOnlyList{Xamarin.Forms.Page},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Xamarin.Forms.ShellNavigationSource" />
        <Parameter Name="shellItem" Type="Xamarin.Forms.ShellItem" />
        <Parameter Name="shellSection" Type="Xamarin.Forms.ShellSection" />
        <Parameter Name="shellContent" Type="Xamarin.Forms.ShellContent" />
        <Parameter Name="stack" Type="System.Collections.Generic.IReadOnlyList&lt;Xamarin.Forms.Page&gt;" />
        <Parameter Name="canCancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="shellItem">To be added.</param>
        <param name="shellSection">To be added.</param>
        <param name="shellContent">To be added.</param>
        <param name="stack">To be added.</param>
        <param name="canCancel">To be added.</param>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xamarin.Forms.IShellController.RemoveAppearanceObserver">
      <MemberSignature Language="C#" Value="bool IShellController.RemoveAppearanceObserver (Xamarin.Forms.IAppearanceObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Xamarin.Forms.IShellController.RemoveAppearanceObserver(class Xamarin.Forms.IAppearanceObserver observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.Xamarin#Forms#IShellController#RemoveAppearanceObserver(Xamarin.Forms.IAppearanceObserver)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Xamarin.Forms.IShellController.RemoveAppearanceObserver(Xamarin.Forms.IAppearanceObserver)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="Xamarin.Forms.IAppearanceObserver" />
      </Parameters>
      <Docs>
        <param name="observer">To be added.</param>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xamarin.Forms.IShellController.RemoveFlyoutBehaviorObserver">
      <MemberSignature Language="C#" Value="bool IShellController.RemoveFlyoutBehaviorObserver (Xamarin.Forms.IFlyoutBehaviorObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Xamarin.Forms.IShellController.RemoveFlyoutBehaviorObserver(class Xamarin.Forms.IFlyoutBehaviorObserver observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.Xamarin#Forms#IShellController#RemoveFlyoutBehaviorObserver(Xamarin.Forms.IFlyoutBehaviorObserver)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Xamarin.Forms.IShellController.RemoveFlyoutBehaviorObserver(Xamarin.Forms.IFlyoutBehaviorObserver)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="Xamarin.Forms.IFlyoutBehaviorObserver" />
      </Parameters>
      <Docs>
        <param name="observer">To be added.</param>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xamarin.Forms.IShellController.StructureChanged">
      <MemberSignature Language="C#" Value="event EventHandler Xamarin.Forms.IShellController.StructureChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Xamarin.Forms.IShellController.StructureChanged" />
      <MemberSignature Language="DocId" Value="E:Xamarin.Forms.Shell.Xamarin#Forms#IShellController#StructureChanged" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:Xamarin.Forms.IShellController.StructureChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xamarin.Forms.IShellController.UpdateCurrentState">
      <MemberSignature Language="C#" Value="void IShellController.UpdateCurrentState (Xamarin.Forms.ShellNavigationSource source);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Xamarin.Forms.IShellController.UpdateCurrentState(valuetype Xamarin.Forms.ShellNavigationSource source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Shell.Xamarin#Forms#IShellController#UpdateCurrentState(Xamarin.Forms.ShellNavigationSource)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Xamarin.Forms.IShellController.UpdateCurrentState(Xamarin.Forms.ShellNavigationSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Xamarin.Forms.ShellNavigationSource" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
